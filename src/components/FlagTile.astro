---
import { Icon } from "astro-icon/components";
import { DEFAULT_INTRO } from "@/utils/distance";
---

<div
  id="distance-widget"
  class="group relative flex flex-col items-center justify-evenly gap-3 rounded-2xl border border-primary/20 bg-primary/10 p-4 shadow-lg backdrop-blur-md lg:relative dark:shadow-black/50"
>
  <div
    class="lg:absolute lg:top-0 lg:left-1/2 lg:mb-4 lg:-translate-x-1/2 lg:-translate-y-[20%]"
  >
    <div
      class="flag-wave-container group-hover:motion-safe:after:animate-flag-wave"
    >
      <svg
        class="aspect-[3/2] w-64 rounded"
        viewBox="0 0 30 20"
        xmlns="http://www.w3.org/2000/svg"
      >
        <rect width="30" height="20" fill="#C8102E"></rect>
        <polygon
          fill="#FFCC00"
          points="15,4 11.47,14.85 20.71,8.15 9.29,8.15 18.53,14.85"></polygon>
      </svg>
    </div>
  </div>
  <p class="w-4/5 text-sm sm:text-base lg:mt-24">
    I'm from Ho Chi Minh City, Vietnam -
    <span id="distance-text" class="text-accent italic">{DEFAULT_INTRO}</span>
  </p>
</div>

<script>
  import {
    getDistanceKm,
    HCM,
    NEIGHBOR_THRESHOLD_KM,
    DEFAULT_INTRO,
  } from "@/utils/distance";

  async function updateDistance() {
    const el = document.getElementById("distance-text");
    if (!el) return;

    try {
      const response = await fetch("https://ipinfo.io/json");
      const data = await response.json();
      const [lat, lon] = data.loc?.split(",").map(Number) || [];
      if (isNaN(lat) || isNaN(lon)) {
        el.textContent = DEFAULT_INTRO;
        return;
      }

      const km = getDistanceKm(HCM.lat, HCM.lon, lat, lon);
      const location = [data.city, data.region, data.country]
        .filter((v, i, arr) => !i || v !== arr[i - 1])
        .join(", ");

      el.textContent =
        km < NEIGHBOR_THRESHOLD_KM
          ? "means we're basically neighbors"
          : `is roughly ${km.toFixed(1)} km away from ${location}`;
    } catch {
      el.textContent = DEFAULT_INTRO;
    }
  }

  updateDistance();
</script>
